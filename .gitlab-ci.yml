workflow:
    rules:
        - if: '$CI_COMMIT_BRANCH == "master"'
        - if: '$CI_COMMIT_BRANCH == "develop"'
        - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

stages:
    - build
    - test
    - deploy

.cache: &server_cache
  cache:
    key:
      files:
        - server/package-lock.json
    paths:
      - server/node_modules/

.cache: &electron_cache
  cache:
    key:
      files:
        - client/package-lock.json
    paths:
      - client/node_modules/


build_server:
    stage: build
    <<: *server_cache
    script:
        - echo "Build serveur"
        - ./pipeline/build_server.sh
    artifacts:
        expire_in: 1 day
        paths:
            - server/node_modules/
            - server/out/

build_electron:
    stage: build
    <<: *electron_cache
    script:
        - echo "Build electron"
        - ./pipeline/build_electron.sh
    artifacts:
        expire_in: 1 day
        paths:
            - client/node_modules/

test_server:
    stage: test
    allow_failure: true
    needs:
        - build_server
    dependencies:
        - build_server
    script:
        - echo "Test server"
        - ./pipeline/test_server.sh
    

test_electron:
    stage: test
    allow_failure: true
    needs:
        - build_electron
    dependencies:
        - build_electron
    script:
        - echo "Test electron"
        - ./pipeline/test_electron.sh


deploy_dev:
    stage: deploy
    only:
        - develop
    script:
        - echo "Deploy dev"
        - ./pipeline/deploy_dev.sh
    artifacts:
        paths:
            - client/build/PolyDessin_Setup_*.exe

deploy_prod:
    stage: deploy
    only:
        - master
    script:
        - echo "Deploy prod"
        - ./pipeline/deploy_prod.sh
    artifacts:
        paths:
            - client/build/PolyDessin_Setup_*.exe
